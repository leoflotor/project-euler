"""
Each new term in the Fibonacci sequence is generated by adding the previous 
two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed 
four million, find the sum of the even-valued terms.
"""

# function fib(n)
#   n <= 2 && return n
#   fib(n-1) + fib(n-2)
# end

# function sum_even_fib_numbers(number)
#   summation = 0
#   i = 1
#   while fib(i) < number
#       summation += fib(i) % 2 == 0 ? fib(i) : 0
#       i += 1
#   end
#   summation
# end

function sum_even_fib_numbers(ceiling)
    memo = (1, 2)
    # tmp = [1, 2]
    sum = 0
    while memo[2] < ceiling
        # append!(tmp, memo[2] + memo[1])
        if memo[2] % 2 == 0
            sum += memo[2]
        end
        memo = (memo[2], memo[2]+memo[1])
    end
    sum # , tmp
end

println(sum_even_fib_numbers(4000000))
